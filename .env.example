# ===========================
# Modular Discord Bot - .env.example
# ===========================
# Copy this file to ".env" and fill in required values.
# Required keys are in the first section. All others are optional and have safe defaults.
# Booleans accept: true|false|1|0|yes|no|on|off

# ---------------------------
# Required
# ---------------------------
# Discord bot token and application client id
DISCORD_TOKEN=your-bot-token-here
DISCORD_CLIENT_ID=your-application-client-id

# ---------------------------
# Development Quality-of-Life
# ---------------------------
# Fast command registration to a single guild (speeds up iterations)
# Put a Discord Guild (Server) ID here to install commands to that guild during development.
GUILD_ID=

# Logging level for console output
# Allowed: error, warn, info, http, verbose, debug, silly
LOG_LEVEL=info

# Hot reload behavior:
# If true, whenever a module file changes and hot reload runs, commands are re-installed.
HOT_RELOAD_REINSTALL=true

# Command deployment strategy
# bulk: single PUT call per scope (recommended default)
# diff: create/patch/delete per command (slower but granular logs)
# auto: alias of bulk in this project
COMMAND_DEPLOY_STRATEGY=bulk
# Legacy toggle (ignored if COMMAND_DEPLOY_STRATEGY is set):
# BATCH_COMMAND_DEPLOY=true

# ---------------------------
# Embed Theme (Optional)
# ---------------------------
# Customize embed colors and footer branding
# EMBED_COLOR_SUCCESS=#00ff7f
# EMBED_COLOR_ERROR=#ff4d4d
# EMBED_COLOR_INFO=#5865F2
# EMBED_COLOR_WARN=#FFA500
# EMBED_COLOR_NEUTRAL=#2C2F33
# EMBED_FOOTER_TEXT=My Bot
# EMBED_FOOTER_ICON=https://example.com/icon.png

# ---------------------------
# HTTP Client (Optional)
# ---------------------------
# Timeouts and retry behavior for any outbound HTTP the bot may perform
# HTTP_TIMEOUT_MS=10000
# HTTP_RETRIES=2
# HTTP_BACKOFF_MS=300
# HTTP_USER_AGENT=modular-discord-bot/0.1

# ---------------------------
# MongoDB (Optional) â€” core/mongo.js
# ---------------------------
# If MONGODB_URI is empty or unset, MongoDB features remain disabled.
# Example: mongodb+srv://user:pass@cluster0.mongodb.net/?retryWrites=true&w=majority
MONGODB_URI=
MONGODB_DB=discordbot
# Official driver Server API: v1 | 1
MONGODB_SERVER_API=v1
# Connection pool sizing
MONGODB_MIN_POOL=0
MONGODB_MAX_POOL=10
# Timeouts (milliseconds)
MONGODB_CONNECT_TIMEOUT_MS=10000
MONGODB_SOCKET_TIMEOUT_MS=20000
# TLS settings
MONGODB_TLS=false
# Path to CA file if needed for TLS connections
# MONGODB_TLS_CA_FILE=/path/to/ca.pem

# ---------------------------
# Scheduler (Optional)
# ---------------------------
# Default timezone used by cronjobs; may be overridden per job in code
# SCHEDULER_TIMEZONE=UTC

# ===========================
# Module Flags (Feature Switches)
# ===========================
# Each module can be enabled/disabled via MODULE_*_ENABLED flags.
# When unset, modules default to enabled unless noted otherwise.

# Example module flags used in this repository:
MODULE_KITCHEN_SINK_ENABLED=true
MODULE_STATS_ENABLED=true
MODULE_CLEANUP_ENABLED=true
MODULE_MUSIC_ENABLED=true
MODULE_AUTOROLE_ENABLED=true
MODULE_TICKETS_ENABLED=true
MODULE_MODLOG_ENABLED=true

# ===========================
# Music Module (Lavalink / Moonlink.js)
# ===========================
# Connection to your Lavalink server
LAVALINK_HOST=localhost
LAVALINK_PORT=2333
LAVALINK_PASSWORD=yourpassword

# Optional: Provider integrations passed through to Lavalink container (also used by docker-compose)
# Leave blank if unused.
SPOTIFY_CLIENT_ID=
SPOTIFY_CLIENT_SECRET=
YOUTUBE_REFRESH_TOKEN=

# ===========================
# Autorole Module
# ===========================
# Whether to ignore bot accounts by default when no per-guild setting exists
AUTOROLE_DEFAULT_IGNORE_BOTS=true
# Maximum allowed delay in seconds for safety bounds in the UI (default 86400 = 24h)
AUTOROLE_MAX_DELAY_SECONDS=86400

# ===========================
# Tickets Module
# ===========================
# Default policy values (can be overridden per guild via settings stored in MongoDB)
# Inactivity auto-close threshold in milliseconds (default 48h)
TICKETS_DEFAULT_INACTIVITY_MS=172800000
# Warning lead time before auto-close in milliseconds (default 12h)
TICKETS_DEFAULT_WARNING_MS=43200000
# Reopen window after closure in milliseconds (default 24h)
TICKETS_DEFAULT_REOPEN_MS=86400000

# Transcript defaults
# Allowed: html | text
TICKETS_DEFAULT_TRANSCRIPT_FORMAT=html
# Whether to DM transcript to the ticket opener on close
TICKETS_DEFAULT_DM_TRANSCRIPT=true

# Optional: Safety limits and UI bounds
# Maximum number of active tickets per user (0 = unlimited)
TICKETS_MAX_ACTIVE_PER_USER=0
# Maximum tickets per guild (0 = unlimited)
TICKETS_MAX_ACTIVE_PER_GUILD=0

# ===========================
# ModLog Module
# ===========================
# Default page size for /modlog search (embeds). Min 1, Max 25
MODLOG_DEFAULT_PAGE_SIZE=10
# Hard cap on total logs fetched per query to respect rate limits
MODLOG_MAX_FETCH=300
# Optional in-memory cache TTL for per-guild search windows (milliseconds); 0 disables caching
MODLOG_CACHE_TTL_MS=15000
# Maximum rows allowed when exporting CSV/JSON
MODLOG_EXPORT_MAX=2000

# ===========================
# Stats Module
# ===========================
# Feature flag is already listed in Module Flags section:
# MODULE_STATS_ENABLED=true

# ===========================
# Kitchen Sink Module
# ===========================
# Optionally install example commands to a specific guild on ready (for demos)
# Put a Discord Guild ID here to speed up command propagation during development
MODULE_KITCHEN_SINK_INSTALL_GUILD=
# Enable the scheduled background job command (/schedule)
MODULE_KITCHEN_SINK_SCHEDULE_ENABLED=false